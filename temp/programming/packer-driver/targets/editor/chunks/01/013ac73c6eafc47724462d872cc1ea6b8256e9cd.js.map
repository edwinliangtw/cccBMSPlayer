{"version":3,"sources":["file:///Users/edwin/Desktop/CCCGame/cccBMSPlayer/assets/scripts/core/BMSLoader.ts"],"names":["BMSLoader","assetManager","AudioSource","SpriteFrame","Texture2D","BMSParser","loadBMS","remoteUrlBase","bmsFileName","Promise","resolve","loadRemote","err","asset","_remoteUrlBase","_bms","parse","loadImages","progress","promise","bmpSFs","counter","Object","keys","bmp","forEach","key","idx","push","loadImage","length","all","loadSounds","wavASs","wav","loadSound","obj","len","baseUrl","filename","imageAsset","spriteFrame","texture","image","audioClip","audioSource","name","clip"],"mappings":"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","sourcesContent":["import { Asset, assetManager, AudioSource, ImageAsset, resources, SpriteFrame, Texture2D } from \"cc\";\nimport { BMSData } from \"./BMSData\";\nimport { BMSParser } from \"./BMSParser\";\n\n/**\n * resource loader by\n * Edwin Liang\n * edwinliang.tw@gmail.com\n */\n\nexport class BMSLoader {\n\n    private static _bms: BMSData;\n    private static _remoteUrlBase = ''\n\n    public static loadBMS(remoteUrlBase: string, bmsFileName: string) {\n        return new Promise(resolve => {\n            assetManager.loadRemote<Asset>(remoteUrlBase + bmsFileName, (err, asset) => {\n                this._remoteUrlBase = remoteUrlBase;\n                this._bms = (new BMSParser).parse(asset['_file']) as BMSData;\n                resolve(this._bms);\n            });\n        });\n    }\n\n    public static async loadImages(progress) {\n        let promise = []\n        let bmpSFs = { counter: 0 }\n        Object.keys(this._bms.bmp).forEach((key, idx, keys) => {\n            promise.push(this.loadImage(bmpSFs, key, keys.length, this._remoteUrlBase, this._bms.bmp[key], progress))\n        })\n        await Promise.all(promise)\n        delete bmpSFs.counter\n        return Promise.resolve(bmpSFs)\n    }\n\n    public static async loadSounds(progress) {\n        let promise = []\n        let wavASs = { counter: 0 }\n        Object.keys(this._bms.wav).forEach((key, idx, keys) => {\n            promise.push(this.loadSound(wavASs, key, keys.length, this._remoteUrlBase, this._bms.wav[key], progress))\n        })\n        await Promise.all(promise)\n        delete wavASs.counter\n        return Promise.resolve(wavASs)\n    }\n\n    private static loadImage(obj, key, len, baseUrl, filename, progress) {\n        return new Promise(resolve => {\n            assetManager.loadRemote<ImageAsset>(baseUrl + filename, (err, imageAsset) => {\n                const spriteFrame = new SpriteFrame();\n                const texture = new Texture2D();\n                texture.image = imageAsset;\n                spriteFrame.texture = texture;\n                obj[key] = spriteFrame;\n                progress && progress('image', ++obj.counter, len, filename);\n                resolve(null)\n            });\n        })\n    }\n\n    private static loadSound(obj, key, len, baseUrl, filename, progress) {\n        return new Promise(resolve => {\n            assetManager.loadRemote(baseUrl + filename, (err, audioClip) => {\n                const audioSource = new AudioSource(audioClip.name)\n                audioSource.clip = audioClip;\n                obj[key] = audioSource\n                progress && progress('sound', ++obj.counter, len, filename);\n                resolve(null)\n            });\n        })\n    }\n}"]}